import:
  # uncomment the flavour you want below:
  # - ~/.config/alacritty/catppuccin/catppuccin-mocha.yml
 - ~/.config/alacritty/catppuccin/catppuccin-macchiato.yml
#  - ~/.config/alacritty/catppuccin/catppuccin-frappe.yml
#  - ~/.config/alacritty/catppuccin/catppuccin-latte.yml
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color
# TERM:"" nvim
window:
  # Window dimensions in character columns and lines
  # (changes require restart)
  dimensions:
    columns: 0
    lines: 0

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 2
    y: 2

  dynamic_padding: false
  # Window decorations
  #
  # Available values:
  # - `full`: Window with title bar and title bar buttons
  # - `none`: Window without title bar, rounded corners, or drop shadow
  # - `transparent`: Window with title bar with transparent background and title
  #   bar buttons
  # - `buttonless`: Window with title bar with transparent background and no
  #   title bar buttons
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #     - buttonless: Title bar, transparent background and title bar buttons
  #     - transparent: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Maximized

# scrolling.multiplier: 3

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  auto_scroll: true

# Display tabs using this many cells (changes require restart)
tabspaces: 4

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    # family: "Fira Code"
    # family: "Roboto Mono"
    family: "Hack Nerd Font"
    # family: "Droid Sans Mono"
    # Style can be specified to pick a specific face.
    # style: Regular

  # The bold font face
  bold:
    # family: "Roboto Mono"
    family: "Hack Nerd Font"
    # family: "Droid Sans Mono"
    # Style can be specified to pick a specific face.
    style: Bold

  # The italic font face
  italic:
    # family: "Roboto Mono"
    # family: "Droid Sans Mono"
    family: "Hack Nerd Font"
    # Style can be specified to pick a specific face.
    style: Italic

  # Point size of the font
  size: 18

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.test_test1
  glyph_offset:
    x: 0
    y: 0

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  apple_font_smoothing: true

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# Colors (Pink Moon)
# colors:
#   # Default colors
#   primary:
#     background: "0x2a2e38"
#     foreground: "0xF0FDFF"

# (Optional) Bright and Dim foreground colors
#
# The dimmed foreground color is calculated automatically if it is not present.
# If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
# is `false`, the normal foreground color will be used.
#
# dim_foreground: '0x9a9a9a'
# bright_foreground: '0xffffff'

## Visual Bell
##
## Any time the BEL code is received, Alacritty "rings" the visual bell. Once
## rung, the terminal background will be set to white and transition back to the
## default background color. You can control the rate of this transition by
## setting the `duration` property (represented in milliseconds). You can also
## configure the transition function by setting the `animation` property.
##
## Possible values for `animation`
## `Ease`
## `EaseOut`
## `EaseOutSine`
## `EaseOutQuad`
## `EaseOutCubic`
## `EaseOutQuart`
## `EaseOutQuint`
## `EaseOutExpo`
## `EaseOutCirc`
## `Linear`
##
## To completely disable the visual bell, set its duration to 0.
##
#visual_bell:
#  animation: EaseOutExpo
#  duration: 1

## Background opacity
#window_opacity: 1.0

## Mouse bindings
##
## Currently doesn't support modifiers. Both the `mouse` and `action` fields must
## be specified.
##
## Values for `mouse`:
## - Middle
## - Left
## - Right
## - Numeric identifier such as `5`
##
## Values for `action`:
## - Paste
## - PasteSelection
## - Copy (TODO)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

#mouse:
#  # Click settings
#  #
#  # The `double_click` and `triple_click` settings control the time
#  # alacritty should wait for accepting multiple clicks as one double
#  # or triple click.
#  double_click: { threshold: 300 }
#  triple_click: { threshold: 300 }

#  hide_when_typing: false
#  # Faux Scrollback
#  #
#  # The `faux_scrollback_lines` setting controls the number
#  # of lines the terminal should scroll when the alternate
#  # screen buffer is active. This is used to allow mouse
#  # scrolling for applications like `man`.
#  #
#  # To disable this completely, set `faux_scrollback_lines` to 0.
#  # faux_scrollback_lines: 1

#selection:
#  semantic_escape_chars: ',â”‚`|:"'' ()[]{}<>'

#  # When set to `true`, selected text will be copied to the primary clipboard.
#  save_to_clipboard: false

#dynamic_title: true

cursor:
  # Style of the cursor
  #
  # Values for 'cursor_style':
  # - Block
  # - Underline
  # - Beam
  style: Block

  # Whether the cursor should be a hollow block on window focus loss
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

## Shell
##
## You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
## Entries in shell.args are passed unmodified as arguments to the shell.
##
## shell:
##   program: /bin/bash
##   args:
##     - --login

#shell:
#  # program: /bin/zsh
#  program: /opt/homebrew/bin/fish
## Key bindings
##
## Each binding is defined as an object with some properties. Most of the
## properties are optional. All of the alphabetical keys should have a letter for
## the `key` value such as `V`. Function keys are probably what you would expect
## as well (F1, F2, ..). The number keys above the main keyboard are encoded as
## `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
## etc.  These all match the glutin::VirtualKeyCode variants.
##
## A list with all available `key` names can be found here:
## https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
##
## Possible values for `mods`
## `Command`, `Super` refer to the super/command/windows key
## `Control` for the control key
## `Shift` for the Shift key
## `Alt` and `Option` refer to alt/option
##
## mods may be combined with a `|`. For example, requiring control and shift
## looks like:
##
## mods: Control|Shift
##
## The parser is currently quite sensitive t
